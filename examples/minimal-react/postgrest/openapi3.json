{
    "openapi": "3.0.0",
    "info": {
        "description": "This is a dynamic API generated by PostgREST",
        "title": "PostgREST API",
        "version": "12.2.12"
    },
    "paths": {
        "/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "summary": "OpenAPI description (this document)",
                "tags": [
                    "Introspection"
                ]
            }
        },
        "/todos": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/rowFilter.todos.id"
                    },
                    {
                        "$ref": "#/components/parameters/rowFilter.todos.done"
                    },
                    {
                        "$ref": "#/components/parameters/rowFilter.todos.task"
                    },
                    {
                        "$ref": "#/components/parameters/rowFilter.todos.due"
                    },
                    {
                        "$ref": "#/components/parameters/select"
                    },
                    {
                        "$ref": "#/components/parameters/order"
                    },
                    {
                        "$ref": "#/components/parameters/range"
                    },
                    {
                        "$ref": "#/components/parameters/rangeUnit"
                    },
                    {
                        "$ref": "#/components/parameters/offset"
                    },
                    {
                        "$ref": "#/components/parameters/limit"
                    },
                    {
                        "$ref": "#/components/parameters/preferCount"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/todos"
                                    },
                                    "type": "array"
                                }
                            },
                            "application/vnd.pgrst.object+json;nulls=stripped": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/todos"
                                    },
                                    "type": "array"
                                }
                            },
                            "application/vnd.pgrst.object+json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/todos"
                                    },
                                    "type": "array"
                                }
                            },
                            "text/csv": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/todos"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "Partial Content"
                    }
                },
                "tags": [
                    "todos"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/select"
                    },
                    {
                        "$ref": "#/components/parameters/preferPost"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/todos"
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "todos"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/rowFilter.todos.id"
                    },
                    {
                        "$ref": "#/components/parameters/rowFilter.todos.done"
                    },
                    {
                        "$ref": "#/components/parameters/rowFilter.todos.task"
                    },
                    {
                        "$ref": "#/components/parameters/rowFilter.todos.due"
                    },
                    {
                        "$ref": "#/components/parameters/preferReturn"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "todos"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/rowFilter.todos.id"
                    },
                    {
                        "$ref": "#/components/parameters/rowFilter.todos.done"
                    },
                    {
                        "$ref": "#/components/parameters/rowFilter.todos.task"
                    },
                    {
                        "$ref": "#/components/parameters/rowFilter.todos.due"
                    },
                    {
                        "$ref": "#/components/parameters/preferReturn"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/todos"
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "tags": [
                    "todos"
                ]
            }
        },
        "/rpc/update_todo": {
            "get": {
                "parameters": [
                    {
                        "in": "query",
                        "name": "p_id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "p_task",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "text"
                        }
                    },
                    {
                        "in": "query",
                        "name": "p_done",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "format": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "p_due",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "timestamp with time zone"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) update_todo"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/preferParams"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "p_done": {
                                        "format": "boolean",
                                        "type": "boolean"
                                    },
                                    "p_due": {
                                        "format": "timestamp with time zone",
                                        "type": "string"
                                    },
                                    "p_id": {
                                        "format": "integer",
                                        "type": "integer"
                                    },
                                    "p_task": {
                                        "format": "text",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "p_id"
                                ],
                                "type": "object"
                            }
                        },
                        "application/vnd.pgrst.object+json;nulls=stripped": {
                            "schema": {
                                "properties": {
                                    "p_done": {
                                        "format": "boolean",
                                        "type": "boolean"
                                    },
                                    "p_due": {
                                        "format": "timestamp with time zone",
                                        "type": "string"
                                    },
                                    "p_id": {
                                        "format": "integer",
                                        "type": "integer"
                                    },
                                    "p_task": {
                                        "format": "text",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "p_id"
                                ],
                                "type": "object"
                            }
                        },
                        "application/vnd.pgrst.object+json": {
                            "schema": {
                                "properties": {
                                    "p_done": {
                                        "format": "boolean",
                                        "type": "boolean"
                                    },
                                    "p_due": {
                                        "format": "timestamp with time zone",
                                        "type": "string"
                                    },
                                    "p_id": {
                                        "format": "integer",
                                        "type": "integer"
                                    },
                                    "p_task": {
                                        "format": "text",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "p_id"
                                ],
                                "type": "object"
                            }
                        },
                        "text/csv": {
                            "schema": {
                                "properties": {
                                    "p_done": {
                                        "format": "boolean",
                                        "type": "boolean"
                                    },
                                    "p_due": {
                                        "format": "timestamp with time zone",
                                        "type": "string"
                                    },
                                    "p_id": {
                                        "format": "integer",
                                        "type": "integer"
                                    },
                                    "p_task": {
                                        "format": "text",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "p_id"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) update_todo"
                ]
            }
        },
        "/rpc/create_todo": {
            "get": {
                "parameters": [
                    {
                        "in": "query",
                        "name": "p_task",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "text"
                        }
                    },
                    {
                        "in": "query",
                        "name": "p_due",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "timestamp with time zone"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) create_todo"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/preferParams"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "p_due": {
                                        "format": "timestamp with time zone",
                                        "type": "string"
                                    },
                                    "p_task": {
                                        "format": "text",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "p_task"
                                ],
                                "type": "object"
                            }
                        },
                        "application/vnd.pgrst.object+json;nulls=stripped": {
                            "schema": {
                                "properties": {
                                    "p_due": {
                                        "format": "timestamp with time zone",
                                        "type": "string"
                                    },
                                    "p_task": {
                                        "format": "text",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "p_task"
                                ],
                                "type": "object"
                            }
                        },
                        "application/vnd.pgrst.object+json": {
                            "schema": {
                                "properties": {
                                    "p_due": {
                                        "format": "timestamp with time zone",
                                        "type": "string"
                                    },
                                    "p_task": {
                                        "format": "text",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "p_task"
                                ],
                                "type": "object"
                            }
                        },
                        "text/csv": {
                            "schema": {
                                "properties": {
                                    "p_due": {
                                        "format": "timestamp with time zone",
                                        "type": "string"
                                    },
                                    "p_task": {
                                        "format": "text",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "p_task"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) create_todo"
                ]
            }
        },
        "/rpc/read_todos": {
            "get": {
                "parameters": [
                    {
                        "in": "query",
                        "name": "p_limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "p_offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "p_sort_column",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "text"
                        }
                    },
                    {
                        "in": "query",
                        "name": "p_sort_order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "text"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) read_todos"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/preferParams"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "p_limit": {
                                        "format": "integer",
                                        "type": "integer"
                                    },
                                    "p_offset": {
                                        "format": "integer",
                                        "type": "integer"
                                    },
                                    "p_sort_column": {
                                        "format": "text",
                                        "type": "string"
                                    },
                                    "p_sort_order": {
                                        "format": "text",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/vnd.pgrst.object+json;nulls=stripped": {
                            "schema": {
                                "properties": {
                                    "p_limit": {
                                        "format": "integer",
                                        "type": "integer"
                                    },
                                    "p_offset": {
                                        "format": "integer",
                                        "type": "integer"
                                    },
                                    "p_sort_column": {
                                        "format": "text",
                                        "type": "string"
                                    },
                                    "p_sort_order": {
                                        "format": "text",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/vnd.pgrst.object+json": {
                            "schema": {
                                "properties": {
                                    "p_limit": {
                                        "format": "integer",
                                        "type": "integer"
                                    },
                                    "p_offset": {
                                        "format": "integer",
                                        "type": "integer"
                                    },
                                    "p_sort_column": {
                                        "format": "text",
                                        "type": "string"
                                    },
                                    "p_sort_order": {
                                        "format": "text",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/csv": {
                            "schema": {
                                "properties": {
                                    "p_limit": {
                                        "format": "integer",
                                        "type": "integer"
                                    },
                                    "p_offset": {
                                        "format": "integer",
                                        "type": "integer"
                                    },
                                    "p_sort_column": {
                                        "format": "text",
                                        "type": "string"
                                    },
                                    "p_sort_order": {
                                        "format": "text",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) read_todos"
                ]
            }
        },
        "/rpc/delete_todo": {
            "get": {
                "parameters": [
                    {
                        "in": "query",
                        "name": "p_id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_todo"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/preferParams"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "p_id": {
                                        "format": "integer",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "p_id"
                                ],
                                "type": "object"
                            }
                        },
                        "application/vnd.pgrst.object+json;nulls=stripped": {
                            "schema": {
                                "properties": {
                                    "p_id": {
                                        "format": "integer",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "p_id"
                                ],
                                "type": "object"
                            }
                        },
                        "application/vnd.pgrst.object+json": {
                            "schema": {
                                "properties": {
                                    "p_id": {
                                        "format": "integer",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "p_id"
                                ],
                                "type": "object"
                            }
                        },
                        "text/csv": {
                            "schema": {
                                "properties": {
                                    "p_id": {
                                        "format": "integer",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "p_id"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) delete_todo"
                ]
            }
        }
    },
    "externalDocs": {
        "description": "PostgREST Documentation",
        "url": "https://postgrest.org/en/v12/references/api.html"
    },
    "servers": [
        {
            "url": "http://0.0.0.0:4000"
        }
    ],
    "components": {
        "parameters": {
            "preferParams": {
                "name": "Prefer",
                "description": "Preference",
                "required": false,
                "in": "header",
                "schema": {
                    "type": "string",
                    "enum": [
                        "params=single-object"
                    ]
                }
            },
            "preferReturn": {
                "name": "Prefer",
                "description": "Preference",
                "required": false,
                "in": "header",
                "schema": {
                    "type": "string",
                    "enum": [
                        "return=representation",
                        "return=minimal",
                        "return=none"
                    ]
                }
            },
            "preferCount": {
                "name": "Prefer",
                "description": "Preference",
                "required": false,
                "in": "header",
                "schema": {
                    "type": "string",
                    "enum": [
                        "count=none"
                    ]
                }
            },
            "preferPost": {
                "name": "Prefer",
                "description": "Preference",
                "required": false,
                "in": "header",
                "schema": {
                    "type": "string",
                    "enum": [
                        "return=representation",
                        "return=minimal",
                        "return=none",
                        "resolution=ignore-duplicates",
                        "resolution=merge-duplicates"
                    ]
                }
            },
            "select": {
                "name": "select",
                "description": "Filtering Columns",
                "required": false,
                "in": "query",
                "schema": {
                    "type": "string"
                }
            },
            "on_conflict": {
                "name": "on_conflict",
                "description": "On Conflict",
                "required": false,
                "in": "query",
                "schema": {
                    "type": "string"
                }
            },
            "order": {
                "name": "order",
                "description": "Ordering",
                "required": false,
                "in": "query",
                "schema": {
                    "type": "string"
                }
            },
            "range": {
                "name": "Range",
                "description": "Limiting and Pagination",
                "required": false,
                "in": "header",
                "schema": {
                    "type": "string"
                }
            },
            "rangeUnit": {
                "name": "Range-Unit",
                "description": "Limiting and Pagination",
                "required": false,
                "in": "header",
                "schema": {
                    "type": "string",
                    "default": "items"
                }
            },
            "offset": {
                "name": "offset",
                "description": "Limiting and Pagination",
                "required": false,
                "in": "query",
                "schema": {
                    "type": "string"
                }
            },
            "limit": {
                "name": "limit",
                "description": "Limiting and Pagination",
                "required": false,
                "in": "query",
                "schema": {
                    "type": "string"
                }
            },
            "rowFilter.todos.id": {
                "name": "id",
                "required": false,
                "in": "query",
                "schema": {
                    "type": "string"
                }
            },
            "rowFilter.todos.done": {
                "name": "done",
                "required": false,
                "in": "query",
                "schema": {
                    "type": "string"
                }
            },
            "rowFilter.todos.task": {
                "name": "task",
                "required": false,
                "in": "query",
                "schema": {
                    "type": "string"
                }
            },
            "rowFilter.todos.due": {
                "name": "due",
                "required": false,
                "in": "query",
                "schema": {
                    "type": "string"
                }
            }
        },
        "requestBodies": {
            "todos": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/todos"
                        }
                    },
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        "schema": {
                            "$ref": "#/components/schemas/todos"
                        }
                    },
                    "application/vnd.pgrst.object+json": {
                        "schema": {
                            "$ref": "#/components/schemas/todos"
                        }
                    },
                    "text/csv": {
                        "schema": {
                            "$ref": "#/components/schemas/todos"
                        }
                    }
                },
                "description": "todos"
            }
        },
        "schemas": {
            "todos": {
                "required": [
                    "id",
                    "done",
                    "task"
                ],
                "properties": {
                    "id": {
                        "description": "Note:\nThis is a Primary Key.<pk/>",
                        "format": "integer",
                        "type": "integer"
                    },
                    "done": {
                        "default": false,
                        "format": "boolean",
                        "type": "boolean"
                    },
                    "task": {
                        "format": "text",
                        "type": "string"
                    },
                    "due": {
                        "format": "timestamp with time zone",
                        "type": "string"
                    }
                },
                "type": "object"
            }
        }
    }
}