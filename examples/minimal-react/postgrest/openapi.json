{
  "swagger": "2.0",
  "info": {
    "description": "This is a dynamic API generated by PostgREST",
    "title": "PostgREST API",
    "version": "12.2.12"
  },
  "host": "0.0.0.0:4000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json",
    "application/vnd.pgrst.object+json;nulls=stripped",
    "application/vnd.pgrst.object+json",
    "text/csv"
  ],
  "produces": [
    "application/json",
    "application/vnd.pgrst.object+json;nulls=stripped",
    "application/vnd.pgrst.object+json",
    "text/csv"
  ],
  "paths": {
    "/": {
      "get": {
        "produces": [
          "application/openapi+json",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "summary": "OpenAPI description (this document)",
        "tags": [
          "Introspection"
        ]
      }
    },
    "/todos": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.todos.id"
          },
          {
            "$ref": "#/parameters/rowFilter.todos.done"
          },
          {
            "$ref": "#/parameters/rowFilter.todos.task"
          },
          {
            "$ref": "#/parameters/rowFilter.todos.due"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/todos"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "tags": [
          "todos"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.todos"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "tags": [
          "todos"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.todos.id"
          },
          {
            "$ref": "#/parameters/rowFilter.todos.done"
          },
          {
            "$ref": "#/parameters/rowFilter.todos.task"
          },
          {
            "$ref": "#/parameters/rowFilter.todos.due"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "todos"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.todos.id"
          },
          {
            "$ref": "#/parameters/rowFilter.todos.done"
          },
          {
            "$ref": "#/parameters/rowFilter.todos.task"
          },
          {
            "$ref": "#/parameters/rowFilter.todos.due"
          },
          {
            "$ref": "#/parameters/body.todos"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "todos"
        ]
      }
    },
    "/rpc/update_todo": {
      "get": {
        "parameters": [
          {
            "format": "integer",
            "in": "query",
            "name": "p_id",
            "required": true,
            "type": "integer"
          },
          {
            "format": "text",
            "in": "query",
            "name": "p_task",
            "required": false,
            "type": "string"
          },
          {
            "format": "boolean",
            "in": "query",
            "name": "p_done",
            "required": false,
            "type": "boolean"
          },
          {
            "format": "timestamp with time zone",
            "in": "query",
            "name": "p_due",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) update_todo"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "properties": {
                "p_done": {
                  "format": "boolean",
                  "type": "boolean"
                },
                "p_due": {
                  "format": "timestamp with time zone",
                  "type": "string"
                },
                "p_id": {
                  "format": "integer",
                  "type": "integer"
                },
                "p_task": {
                  "format": "text",
                  "type": "string"
                }
              },
              "required": [
                "p_id"
              ],
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) update_todo"
        ]
      }
    },
    "/rpc/create_todo": {
      "get": {
        "parameters": [
          {
            "format": "text",
            "in": "query",
            "name": "p_task",
            "required": true,
            "type": "string"
          },
          {
            "format": "timestamp with time zone",
            "in": "query",
            "name": "p_due",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) create_todo"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "properties": {
                "p_due": {
                  "format": "timestamp with time zone",
                  "type": "string"
                },
                "p_task": {
                  "format": "text",
                  "type": "string"
                }
              },
              "required": [
                "p_task"
              ],
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) create_todo"
        ]
      }
    },
    "/rpc/read_todos": {
      "get": {
        "parameters": [
          {
            "format": "integer",
            "in": "query",
            "name": "p_limit",
            "required": false,
            "type": "integer"
          },
          {
            "format": "integer",
            "in": "query",
            "name": "p_offset",
            "required": false,
            "type": "integer"
          },
          {
            "format": "text",
            "in": "query",
            "name": "p_sort_column",
            "required": false,
            "type": "string"
          },
          {
            "format": "text",
            "in": "query",
            "name": "p_sort_order",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) read_todos"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "properties": {
                "p_limit": {
                  "format": "integer",
                  "type": "integer"
                },
                "p_offset": {
                  "format": "integer",
                  "type": "integer"
                },
                "p_sort_column": {
                  "format": "text",
                  "type": "string"
                },
                "p_sort_order": {
                  "format": "text",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) read_todos"
        ]
      }
    },
    "/rpc/delete_todo": {
      "get": {
        "parameters": [
          {
            "format": "integer",
            "in": "query",
            "name": "p_id",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) delete_todo"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "properties": {
                "p_id": {
                  "format": "integer",
                  "type": "integer"
                }
              },
              "required": [
                "p_id"
              ],
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) delete_todo"
        ]
      }
    }
  },
  "definitions": {
    "todos": {
      "required": [
        "id",
        "done",
        "task"
      ],
      "properties": {
        "id": {
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "integer",
          "type": "integer"
        },
        "done": {
          "default": false,
          "format": "boolean",
          "type": "boolean"
        },
        "task": {
          "format": "text",
          "type": "string"
        },
        "due": {
          "format": "timestamp with time zone",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "parameters": {
    "preferParams": {
      "name": "Prefer",
      "description": "Preference",
      "required": false,
      "enum": [
        "params=single-object"
      ],
      "in": "header",
      "type": "string"
    },
    "preferReturn": {
      "name": "Prefer",
      "description": "Preference",
      "required": false,
      "enum": [
        "return=representation",
        "return=minimal",
        "return=none"
      ],
      "in": "header",
      "type": "string"
    },
    "preferCount": {
      "name": "Prefer",
      "description": "Preference",
      "required": false,
      "enum": [
        "count=none"
      ],
      "in": "header",
      "type": "string"
    },
    "preferPost": {
      "name": "Prefer",
      "description": "Preference",
      "required": false,
      "enum": [
        "return=representation",
        "return=minimal",
        "return=none",
        "resolution=ignore-duplicates",
        "resolution=merge-duplicates"
      ],
      "in": "header",
      "type": "string"
    },
    "select": {
      "name": "select",
      "description": "Filtering Columns",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "on_conflict": {
      "name": "on_conflict",
      "description": "On Conflict",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "order": {
      "name": "order",
      "description": "Ordering",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "range": {
      "name": "Range",
      "description": "Limiting and Pagination",
      "required": false,
      "in": "header",
      "type": "string"
    },
    "rangeUnit": {
      "name": "Range-Unit",
      "description": "Limiting and Pagination",
      "required": false,
      "default": "items",
      "in": "header",
      "type": "string"
    },
    "offset": {
      "name": "offset",
      "description": "Limiting and Pagination",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "limit": {
      "name": "limit",
      "description": "Limiting and Pagination",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.todos": {
      "name": "todos",
      "description": "todos",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/todos"
      }
    },
    "rowFilter.todos.id": {
      "name": "id",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.todos.done": {
      "name": "done",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.todos.task": {
      "name": "task",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "rowFilter.todos.due": {
      "name": "due",
      "required": false,
      "in": "query",
      "type": "string"
    }
  },
  "externalDocs": {
    "description": "PostgREST Documentation",
    "url": "https://postgrest.org/en/v12/references/api.html"
  }
}